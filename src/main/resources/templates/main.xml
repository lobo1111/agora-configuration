<?xml version="1.0" encoding="UTF-8"?>
<templates>
    <template>
        <name>update-community</name>
        <source>update.vtl</source>
        <variables>
            <var>
                <name>comunity</name>
                <data>
                    {:update}
                    {:native}
                    UPDATE
                    community,
                    company,
                    address AS companyAddress
                    SET 
                    community.name = \'{:communityName}\',
                    company.name = \'{:companyName}\',
                    company.nip = \'{:companyNip}\',
                    company.regon = \'{:companyRegon}\',
                    company.www = \'{:companyWww}\',
                    company.email = \'{:companyEmail}\',
                    company.phone_number_1 = \'{:phoneNumber1}\',
                    company.phone_number_2 = \'{:phoneNumber2}\',
                    company.phone_number_3 = \'{:phoneNumber3}\',
                    companyAddress.street = \'{:addressStreet}\',
                    companyAddress.house_number = \'{:addressHouseNumber}\',
                    companyAddress.flat_number = \'{:addressFlatNumber}\',
                    companyAddress.postal_code = \'{:addressPostalCode}\',
                    companyAddress.city = \'{:city}\'
                    WHERE 
                    community.id = {:id} AND
                    community.company_id = company.id AND
                    company.address_id = companyAddress.id
                </data>
            </var>
        </variables>
    </template> 
    <template>
        <name>select-community</name>
        <source>community.vtl</source>
        <variables>
            <var>
                <name>community</name>
                <data>
                    {:single}
                    SELECT c FROM Community c WHERE c.id = {:id}
                </data>
            </var>
        </variables>
    </template>    
    <template>
        <name>select-possession</name>
        <source>possession.vtl</source>
        <variables>
            <var>
                <name>possession</name>
                <data>
                    {:single}
                    SELECT c FROM Possession c WHERE c.id = {:id}
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>select-account</name>
        <source>account.vtl</source>
        <variables>
            <var>
                <name>account</name>
                <data>
                    {:single}
                    SELECT c FROM Account c WHERE c.id = {:id}
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>update-possession</name>
        <source>update.vtl</source>
        <variables>
            <var>
                <name>possession</name>
                <data>
                    {:update}
                    {:native}
                    UPDATE
                    possession,
                    address
                    SET 
                    possession.share = {:possessionShare},
                    possession.area = {:possessionArea},
                    address.street = \'{:addressStreet}\',
                    address.house_number = \'{:addressHouseNumber}\',
                    address.flat_number = \'{:addressFlatNumber}\',
                    address.postal_code = \'{:addressPostalCode}\',
                    address.city = \'{:city}\'
                    WHERE 
                    possession.id = {:id} AND
                    possession.address_id = address.id
                </data>
            </var>
        </variables>
    </template> 
    <template>
        <name>payments-types</name>
        <source>payments-types.vtl</source>
        <variables>
            <var>
                <name>types</name>
                <data>SELECT 
                    dic
                    FROM 
                    Dictionary dic
                    WHERE 
                    dic.type.type = \'PAYMENT_TYPE\'
                    ORDER BY 
                    dic.value ASC</data>
            </var>
        </variables>
    </template>
    <template>
        <name>communities-names</name>
        <source>communities-names.vtl</source>
        <variables>
            <var>
                <name>communities</name>
                <data>SELECT c FROM Community c ORDER BY c.name ASC</data>
            </var>
        </variables>
    </template>
    <template>
        <name>communities-and-possessions-list</name>
        <source>communities-and-possessions-list.vtl</source>
        <variables>
            <var>
                <name>communities</name>
                <data>
                    {:limit}
                    SELECT 
                    community.name, community.area, 
                    possessionAddress.street, possessionAddress.houseNumber, possessionAddress.flatNumber, 
                    possession.area, possession.id, community.id
                    FROM 
                    Community community 
                    JOIN community.possessions possession 
                    JOIN possession.address possessionAddress
                    LEFT OUTER JOIN possession.people possessionOwnerPerson
                    LEFT OUTER JOIN possession.companies possessionOwnerCompany
                    LEFT OUTER JOIN possessionOwnerPerson.address personAddress
                    LEFT OUTER JOIN possessionOwnerCompany.address companyAddress
                    WHERE {:where}
                </data>
            </var>
            <var>
                <name>countRows</name>
                <data>
                    {:single}
                    SELECT 
                    count(community.id)
                    FROM 
                    Community community 
                    JOIN community.possessions possession 
                    JOIN possession.address possessionAddress
                    LEFT OUTER JOIN possession.people possessionOwnerPerson
                    LEFT OUTER JOIN possession.companies possessionOwnerCompany
                    LEFT OUTER JOIN possessionOwnerPerson.address personAddress
                    LEFT OUTER JOIN possessionOwnerCompany.address companyAddress
                    WHERE {:where}
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>possession-owners</name>
        <source>possession-owners.vtl</source>
        <variables>
            <var>
                <name>owners</name>
                <data>
                    SELECT 
                    personOwner.id AS personId,
                    CONCAT(personOwner.firstName, " ", personOwner.lastName) AS personName,
                    companyOwner.id AS companyId,
                    companyOwner.name AS companyName
                    FROM 
                    Possession possession
                    LEFT OUTER JOIN possession.people personOwner
                    LEFT OUTER JOIN possession.companies companyOwner
                    WHERE
                    possession.id = {:id}
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>select-person</name>
        <source>person.vtl</source>
        <variables>
            <var>
                <name>person</name>
                <data>
                    {:single}
                    SELECT 
                    p
                    FROM 
                    Person p
                    WHERE
                    p.id = {:id}
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>select-company</name>
        <source>company.vtl</source>
        <variables>
            <var>
                <name>company</name>
                <data>
                    {:single}
                    SELECT 
                    p
                    FROM 
                    Company p
                    WHERE
                    p.id = {:id}
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>select-accounts</name>
        <source>accounts.vtl</source>
        <variables>
            <var>
                <name>accounts</name>
                <data>
                    {:limit}
                    SELECT 
                    account
                    FROM 
                    Account account
                    WHERE {:where}
                </data>
            </var>
            <var>
                <name>countRows</name>
                <data>
                    {:single}
                    SELECT 
                    count(account.id)
                    FROM 
                    Account account
                    WHERE {:where}
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>select-documents</name>
        <source>incoming-documents.vtl</source>
        <variables>
            <var>
                <name>documents</name>
                <data>
                    {:limit}
                    SELECT 
                    document,
                    dictionary
                    FROM 
                    IncomingPaymentDocumentPosition document,
                    Dictionary dictionary
                    WHERE document.document.status = dictionary.key AND {:where}
                </data>
            </var>
            <var>
                <name>countRows</name>
                <data>
                    {:single}
                    SELECT 
                    count(document.id)
                    FROM 
                    IncomingPaymentDocumentPosition document,
                    Dictionary dictionary
                    WHERE document.document.status = dictionary.key AND {:where}
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>select-payments</name>
        <source>payments.vtl</source>
        <variables>
            <var>
                <name>payments</name>
                <data>
                    {:limit}
                    SELECT 
                    payment
                    FROM 
                    Payment payment
                    WHERE {:where}
                </data>
            </var>
            <var>
                <name>countRows</name>
                <data>
                    {:single}
                    SELECT 
                    count(payment.id)
                    FROM 
                    Payment payment
                    WHERE {:where}
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>select-owners</name>
        <source>owners.vtl</source>
        <variables>
            <var>
                <name>owners</name>
                <data>
                    {:limit}
                    {:native}
                    SELECT
                    id,
                    CONCAT(person.first_name, \' \', person.last_name) AS name,
                    person.pesel,
                    \'osoba fizyczna\' AS type_label,
                    \'PERSON\' AS type_key,
                    FROM
                    person
                    UNION
                    SELECT
                    id,
                    company.name,
                    company.nip,
                    \'firma\' AS type_label,
                    \'COMPANY\' AS type_key,
                    FROM
                    company
                    WHERE {:where}
                </data>
            </var>
            <var>
                <name>countRows</name>
                <data>
                    {:single}
                    {:native}
                    SELECT
                    count(id)
                    FROM
                    (SELECT
                    id
                    FROM
                    person
                    UNION
                    SELECT
                    id
                    FROM
                    company) AS tmp
                    WHERE {:where}
                </data>
            </var>
        </variables>
    </template>
</templates>
