<?xml version="1.0" encoding="UTF-8"?>
<templates>
    <template>
        <name>entity-element</name>
        <source>entity-element.vtl</source>
        <variables>
            <var>
                <name>entity</name>
                <data>
                    {:single}
                    SELECT 
                    e
                    FROM 
                    Element e
                    WHERE 
                    e.id = {:id}
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>entity-default-booking-period</name>
        <source>entity-default-booking-period.vtl</source>
        <variables>
            <var>
                <name>period</name>
                <data>
                    {:single}
                    SELECT 
                    period
                    FROM 
                    BookingPeriod period
                    WHERE 
                    period.defaultPeriod = true
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>entity-contractor</name>
        <source>entity-contractor.vtl</source>
        <variables>
            <var>
                <name>contractor</name>
                <data>
                    {:single}
                    SELECT 
                    o
                    FROM 
                    Contractor o
                    WHERE 
                    o.id = {:id}
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>entity-zpk</name>
        <source>entity-zpk.vtl</source>
        <variables>
            <var>
                <name>zpk</name>
                <data>
                    {:single}
                    SELECT 
                    zpk
                    FROM 
                    ZakladowyPlanKont zpk
                    JOIN zpk.zpkBalances balance
                    JOIN balance.bookingPeriod period
                    WHERE 
                    zpk.id = {:id}
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>entity-community</name>
        <source>entity-community-details.vtl</source>
        <variables>
            <var>
                <name>community</name>
                <data>
                    {:single}
                    SELECT c FROM Community c WHERE c.id = {:id}
                </data>
            </var>
        </variables>
    </template>    
    <template>
        <name>entity-account</name>
        <source>entity-account.vtl</source>
        <variables>
            <var>
                <name>account</name>
                <data>
                    {:single}
                    SELECT c FROM Account c WHERE c.id = {:id}
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>entity-person</name>
        <source>entity-person.vtl</source>
        <variables>
            <var>
                <name>person</name>
                <data>
                    {:single}
                    SELECT 
                    p
                    FROM 
                    Person p
                    WHERE
                    p.id = {:id}
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>entity-company</name>
        <source>entity-company.vtl</source>
        <variables>
            <var>
                <name>company</name>
                <data>
                    {:single}
                    SELECT 
                    p
                    FROM 
                    Company p
                    WHERE
                    p.id = {:id}
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>list-contractors</name>
        <source>list-contractors.vtl</source>
        <variables>
            <var>
                <name>contractors</name>
                <data>
                    {:limit}
                    SELECT
                    contractor
                    FROM
                    Contractor contractor
                    JOIN contractor.community community
                    WHERE {:where} AND contractor.disabled = false 
                    ORDER BY
                    contractor.name ASC
                </data>
            </var>
            <var>
                <name>countRows</name>
                <data>
                    {:single}
                    SELECT
                    count(contractor.id)
                    FROM
                    Contractor contractor
                    JOIN contractor.community community
                    WHERE {:where} AND contractor.disabled = false
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>list-zpks</name>
        <source>list-zpks.vtl</source>
        <variables>
            <var>
                <name>zpks</name>
                <data>
                    {:limit}
                    SELECT
                    zpk
                    FROM
                    ZakladowyPlanKont zpk
                    Join zpk.community community
                    WHERE {:where}
                    ORDER BY
                    zpk.type.key ASC, zpk.number ASC
                </data>
            </var>
            <var>
                <name>countRows</name>
                <data>
                    {:single}
                    SELECT
                    count(zpk.id)
                    FROM
                    ZakladowyPlanKont zpk
                    Join zpk.community community
                    WHERE {:where}
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>list-communities</name>
        <source>list-communities.vtl</source>
        <variables>
            <var>
                <name>communities</name>
                <data>
                    {:limit}
                    SELECT
                    community
                    FROM
                    Community community
                    WHERE {:where}
                    ORDER BY community.outDate ASC, community.name ASC
                </data>
            </var>
            <var>
                <name>countRows</name>
                <data>
                    {:single}
                    SELECT
                    count(community.id)
                    FROM
                    Community community
                    WHERE {:where}
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>list-possessions</name>
        <source>list-possessions.vtl</source>
        <variables>
            <var>
                <name>possessions</name>
                <data>
                    {:limit}
                    SELECT
                    possession
                    FROM 
                    Possession possession
                    JOIN possession.address possessionAddress
                    JOIN possession.community community
                    WHERE {:where}
                    ORDER BY 
                    community.name, 
                    possessionAddress.street, 
                    possessionAddress.houseNumber, 
                    possessionAddress.flatNumber ASC
                </data>
            </var>
            <var>
                <name>countRows</name>
                <data>
                    {:single}
                    SELECT 
                    count(possession.id)
                    FROM 
                    Possession possession
                    JOIN possession.address possessionAddress
                    JOIN possession.community community
                    WHERE {:where}
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>list-accounts</name>
        <source>list-accounts.vtl</source>
        <variables>
            <var>
                <name>accounts</name>
                <data>
                    {:limit}
                    SELECT 
                    account
                    FROM 
                    Account account
                    LEFT OUTER JOIN account.community community
                    JOIN account.type accountType
                    JOIN account.bank bank
                    JOIN bank.company company
                    LEFT OUTER JOIN account.parrentAccount parentAccount
                    WHERE {:where} AND account.closed = 0
                    ORDER BY company.name ASC, account.number ASC
                </data>
            </var>
            <var>
                <name>countRows</name>
                <data>
                    {:single}
                    SELECT 
                    count(account.id)
                    FROM 
                    Account account
                    LEFT OUTER JOIN account.community community
                    JOIN account.type accountType
                    JOIN account.bank bank
                    JOIN bank.company company
                    LEFT OUTER JOIN account.parrentAccount parentAccount
                    WHERE {:where} and account.closed = 0
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>list-elements</name>
        <source>list-elements.vtl</source>
        <variables>
            <var>
                <name>items</name>
                <data>
                    {:limit}
                    SELECT 
                    element
                    FROM 
                    Element element
                    WHERE {:where}
                    ORDER BY element.key ASC
                </data>
            </var>
            <var>
                <name>countRows</name>
                <data>
                    {:single}
                    SELECT 
                    count(element.id)
                    FROM 
                    Element element
                    WHERE {:where}
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>list-companies</name>
        <source>list-companies.vtl</source>
        <variables>
            <var>
                <name>companies</name>
                <data>
                    {:limit}
                    SELECT
                    company
                    FROM 
                    Company company
                    WHERE {:where}
                    ORDER BY company.name ASC
                </data>
            </var>
            <var>
                <name>countRows</name>
                <data>
                    {:single}
                    SELECT count(company.id)
                    FROM
                    Company company
                    WHERE {:where}
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>list-element-types</name>
        <source>list-dictionary.vtl</source>
        <variables>
            <var>
                <name>items</name>
                <data>
                    SELECT dic
                    FROM 
                    Dictionary dic
                    WHERE 
                    dic.type.type = \'ELEMENTS\'
                    ORDER BY 
                    dic.value ASC
                </data>
            </var>
            <var>
                <name>countRows</name>
                <data>
                    {:single}
                    SELECT
                    count(dic.id)
                    FROM 
                    Dictionary dic
                    WHERE 
                    dic.type.type = \'ELEMENTS\'
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>simple-list-element-types</name>
        <source>simple-list.vtl</source>
        <variables>
            <var>
                <name>items</name>
                <data>
                    SELECT new pl.reaper.container.data.helpers.SimpleList(
                    dic.id, dic.value)
                    FROM 
                    Dictionary dic
                    WHERE 
                    dic.type.type = \'ELEMENTS\'
                    ORDER BY 
                    dic.value ASC
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>simple-list-element-algorithms</name>
        <source>list-element-algorithms.vtl</source>
        <variables>
            <var>
                <name>items</name>
                <data>
                    SELECT pa
                    FROM 
                    PaymentAlgorithm pa
                    ORDER BY 
                    pa.name ASC
                </data>
            </var>
            <var>
                <name>countRows</name>
                <data>
                    {:single}
                    SELECT
                    count(pa.id)
                    FROM 
                    PaymentAlgorithm pa
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>current-charge-month</name>
        <source>simple-long-response.vtl</source>
        <variables>
            <var>
                <name>response</name>
                <data>
                    {:single}
                    SELECT
                        dict.value
                    FROM
                        Dictionary dict
                        JOIN dict.type dtype
                    WHERE
                        dtype.type = "PERIODS"
                        AND dict.key = "CURRENT"
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>list-accounts-types</name>
        <source>list-dictionary.vtl</source>
        <variables>
            <var>
                <name>items</name>
                <data>
                    SELECT
                    dic
                    FROM 
                    Dictionary dic
                    WHERE 
                    dic.type.type = \'ACCOUNT_TYPE\'
                    ORDER BY 
                    dic.value ASC
                </data>
            </var>
            <var>
                <name>countRows</name>
                <data>
                    {:single}
                    SELECT
                    count(dic.id)
                    FROM 
                    Dictionary dic
                    WHERE 
                    dic.type.type = \'ACCOUNT_TYPE\'
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>simple-list-accounts-types</name>
        <source>simple-list.vtl</source>
        <variables>
            <var>
                <name>list</name>
                <data>
                    SELECT new pl.reaper.container.data.helpers.SimpleList(
                    dic.id, dic.value)
                    FROM 
                    Dictionary dic
                    WHERE 
                    dic.type.type = \'ACCOUNT_TYPE\'
                    ORDER BY 
                    dic.value ASC
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>simple-list-companies-names</name>
        <source>simple-list.vtl</source>
        <variables>
            <var>
                <name>list</name>
                <data>
                    {:limit}
                    SELECT new pl.reaper.container.data.helpers.SimpleList(
                    company.id, company.name)
                    FROM 
                    Company company
                    WHERE {:where}
                    ORDER BY 
                    company.name ASC
                </data>
            </var>
        </variables>
    </template>
    <template>
        <name>user-information</name>
        <source>entity-person.vtl</source>
        <variables />
    </template>
</templates>
